---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ printf "%s-%s" (include "standardnotes.fullname" .) .Values.auth.name | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "standardnotes.labels" . | nindent 4 }}
spec:
  replicas: {{ default 1 .Values.auth.replicaCount }}
  selector:
    matchLabels:
      {{- include "standardnotes.authSelectorLabels" . | nindent 6 }}
  serviceName: {{ printf "%s-%s" (include "standardnotes.fullname" .) .Values.auth.name | trunc 63 | trimSuffix "-" }}
  minReadySeconds: {{ default .Values.global.minReadySeconds .Values.auth.minReadySeconds }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "standardnotes.authSelectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "standardnotes.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ printf "%s" .Values.auth.name | trunc 63 | trimSuffix "-" }}
        image: {{ printf "%s:%s" .Values.auth.image.repository (default "latest" .Values.auth.image.tag) | quote}}
        imagePullPolicy: {{ .Values.auth.image.pullPolicy }}
        command:
        - ./docker/entrypoint.sh
        args:
        - start-web
        env:
          - name: PORT
            {{ printf "value: %s" (.Values.auth.port | quote)}}
          - name: REDIS_EVENTS_CHANNEL
            {{ printf "value: %s" (.Values.auth.redisChannel | quote)}}
          {{- if .Values.global.env}}
          {{- range $i, $val := .Values.global.env }}
          - name: {{ $val.name }}
            {{ printf "value: %s" ($val.value | quote)}}
          {{- end }}
          {{- end }}
          {{- if .Values.auth.env}}
          {{- range $i, $val := .Values.auth.env }}
          - name: {{- $val.name }}
            {{ printf "value: %s" ($val.value | quote)}}
          {{- end }}
          {{- end }}
        {{- with .Values.auth.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with (default .Values.global.livenessProbe .Values.auth.livenessProbe) }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with (default .Values.global.resources .Values.auth.resources) }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
