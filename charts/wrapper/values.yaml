domain: ""

# -- Passdown values from package
package:
  # -- (Required) Name of the package
  name: ""

  network:
    # -- Toggle all policies on or off
    policies: true
    # -- Which network-policies to use
    # Supported backends: native, cilium
    backend: native
    # -- Deny all traffic in the namespace by default
    defaultDeny: true
    # -- Allow traffic between pods inside the namespace
    allowIntraNamespace: true
    # -- Allow egress traffic from the namespace to the Kubernetes control plane for API calls
    allowControlPlaneEgress: false
    controlPlaneCidr: 0.0.0.0/0
    # -- Allow egress traffic from the namespace to the DNS port
    allowDnsEgress: true
    # -- Custom egress/ingress policies to deploy.
    #    native - https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#networkpolicy-v1-networking-k8s-io
    #    cilium - https://docs.cilium.io/en/latest/network/kubernetes/policy/#ciliumnetworkpolicy
    additionalPolicies: []
    # - name: name-of-policy
    #   spec: {} # See NetworkPolicy OR CiliumNetworkPolicy spec

  entry:
    ingress:
      enabled: false
      ingressClass: nginx
      tlsSecretName: tls-example
      annotations: {}
      hosts: []
      # - name: test
      #   domain: example.com
      #   ingressClass: traefik
      #   tlsSecretName: tls-example
      #   paths:
      #   - backend:
      #       service:
      #         name: foo
      #         port:
      #           name: http
      #           number: 80
      #       path: /
      #       pathType: Prefix
    gateway:
      enabled: false
      gatewayClass: cilium
      annotations: {}
        # cert-manager.io/issuer: step-issuer
        # cert-manager.io/issuer-kind: StepClusterIssuer
        # cert-manager.io/issuer-group: certmanager.step.sm
      hosts: []
      # - name: https
      #   port: 443
      #   protocol: HTTPS
      #   extra:
      #     httpRedirct: true
      #   tls:
      #     enabled: true
      #   rules:
      #   - backendRefs:
      #     - kind: Service
      #       name: argocd-server
      #       namespace: argocd
      #       port: 80

  certificate:
    enabled: false
    certs: []
    # - name: let-encrypt
    #   secretName: tls-let-encrypt
    #   dnsNames: []
    #   ipAddresses: []
    #   issuerRef: {}

  # -- Secrets that should be created prior to Helm install
  secrets: []
  #   # -- Name of secret to create
  # - name:
  #   # -- Type of secret
  #   type: Opaque
  #   # -- Data to include in secret.  Can include helm template syntax.
  #   data: {}

  # -- ConfigMaps that should be created prior to Helm install
  configMaps: []
  #   # -- Name of configMap to create
  # - name:
  #   # -- Data to include in configMap.  Can include helm template syntax.
  #   data: {}
