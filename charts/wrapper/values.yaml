domain: ""

# -- Passdown values from package
package:
  # -- (Required) Name of the package
  name: ""

  network:
    # -- Toggle all policies on or off
    policies: true
    # -- Deny all traffic in the namespace by default
    defaultDeny: true
    # -- Allow traffic between pods inside the namespace
    allowIntraNamespace: true
    # -- Allow egress traffic from the namespace to the Kubernetes control plane for API calls
    allowControlPlaneEgress: false
    controlPlaneCidr: 0.0.0.0/0
    # -- Allow egress traffic from the namespace to the DNS port
    allowDnsEgress: true
    # -- Allow https egress to internet from specific pods
    allowHttpsEgress: []
    # - name: updates
    #   selector:
    #     matchLabels:
    #       app.kubernetes.io/name: example
    # -- Allow communication with the ingress class namespace
    allowIngress: []
    # - name: traefik
    #   namespaceSelctor:
    #     app.kubernetes.io/name: traefik
    #   # -- Optional
    #   ingressPodSelector:
    #     app: traefik
    #   # -- Optional
    #   podSelector:
    #     app.kubernetes.io/name: example
    # -- Custom egress/ingress policies to deploy.  [More info](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#networkpolicy-v1-networking-k8s-io)
    additionalPolicies: []
    # - name: name-of-policy
    #   spec: {} # See Network Policy spec

  ingress:
    enabled: false
    # ingressClass: nginx
    # tlsSecretName: tls-example
    # annotations: {}
    hosts: []
    # - name: test
    #   domain: example.com
    #   ingressClass: traefik
    #   tlsSecretName: tls-example
    #   paths:
    #   - backend:
    #       service:
    #         name: foo
    #         port:
    #           name: http
    #           number: 80
    #       path: /
    #       pathType: Prefix

  certificate:
    enabled: false
    certs: []
    # - name: let-encrypt
    #   secretName: tls-let-encrypt
    #   dnsNames: []
    #   ipAddresses: []
    #   issuerRef: {}

  # -- Secrets that should be created prior to Helm install
  secrets: []
  #   # -- Name of secret to create
  # - name:
  #   # -- Type of secret
  #   type: Opaque
  #   # -- Data to include in secret.  Can include helm template syntax.
  #   data: {}

  # -- ConfigMaps that should be created prior to Helm install
  configMaps: []
  #   # -- Name of configMap to create
  # - name:
  #   # -- Data to include in configMap.  Can include helm template syntax.
  #   data: {}
